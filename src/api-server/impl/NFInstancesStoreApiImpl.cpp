/**
* NRF NFManagement Service
* NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "NFInstancesStoreApiImpl.h"

namespace oai {
namespace nrf {
namespace api {

using namespace oai::nrf::model;

NFInstancesStoreApiImpl::NFInstancesStoreApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr, oai::nrf::nrf_app *nrf_app_inst,
    std::string address)
    :
    NFInstancesStoreApi(rtr),
    m_nrf_app(nrf_app_inst),
    m_address(address) {
}
void NFInstancesStoreApiImpl::get_nf_instances(const Pistache::Optional<NFType> &nfType, const Pistache::Optional<int32_t> &limit, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void NFInstancesStoreApiImpl::options_nf_instances(Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}

